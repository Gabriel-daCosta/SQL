-- Localiza a tabela nos bancos de dados e retorna as suas colunas com os respetivos tipos de dados

-- Substitua pelo texto que voc√™ quer encontrar nos nomes das tabelas
DECLARE @ProcuraTabela NVARCHAR(128) = '_PD_';

-- Constr√≥i o SQL dinamicamente para cada banco com UNION ALL
DECLARE @SQL NVARCHAR(MAX) = '';

SELECT @SQL = @SQL + 
    CASE 
        WHEN @SQL = '' THEN '' 
        ELSE ' UNION ALL ' 
    END +
    'SELECT ' +
        '''' + name + ''' AS DATABASE_NAME, ' +
        'c.TABLE_NAME, ' +
        't.TABLE_TYPE, ' +
        'c.COLUMN_NAME, ' +
        'c.DATA_TYPE, ' +
        'c.CHARACTER_MAXIMUM_LENGTH, ' +
        'c.NUMERIC_PRECISION, ' +
        'c.NUMERIC_SCALE, ' +
        'c.IS_NULLABLE, ' +
        'c.COLUMN_DEFAULT, ' +
        'c.ORDINAL_POSITION ' +
    'FROM [' + name + '].INFORMATION_SCHEMA.COLUMNS c ' +
    'INNER JOIN [' + name + '].INFORMATION_SCHEMA.TABLES t ON c.TABLE_NAME = t.TABLE_NAME ' +
    'WHERE UPPER(c.TABLE_NAME) LIKE UPPER(''%' + @ProcuraTabela + '%'')'
FROM sys.databases 
WHERE state = 0 
  AND database_id > 4 
  AND HAS_DBACCESS(name) = 1;

-- Adiciona ordena√ß√£o final
IF @SQL <> ''
    SET @SQL = @SQL + ' ORDER BY DATABASE_NAME, TABLE_NAME, ORDINAL_POSITION;';

-- Executa apenas se houver bancos para consultar
IF @SQL <> ''
    EXEC sp_executesql @SQL
ELSE
    PRINT 'Nenhum banco acess√≠vel encontrado.';





/* 

üéØ Objetivo e Explica√ß√£o do C√≥digo:

Este c√≥digo procura todas as tabelas que contenham a palavra "ESTRUTURA" no nome e lista todas as colunas dessas tabelas, unificando o resultado em uma √∫nica consulta.
üìù Explica√ß√£o Passo a Passo:

1. Declara√ß√£o das Vari√°veis
DECLARE @ProcuraTabela NVARCHAR(128) = 'ESTRUTURA';
DECLARE @SQL NVARCHAR(MAX) = '';
O que faz:

@ProcuraTabela: Armazena o texto a ser procurado nos nomes das tabelas
@SQL: Vai acumular todo o comando SQL que ser√° constru√≠do dinamicamente
Exemplo: Vai encontrar tabelas como TB_ESTRUTURA_CAIXA, DM_ESTRUTURA_HIST, etc.

2. Constru√ß√£o Din√¢mica com UNION ALL
SELECT @SQL = @SQL + 
    CASE 
        WHEN @SQL = '' THEN '' 
        ELSE ' UNION ALL ' 
    END +
L√≥gica do CASE:

Se @SQL est√° vazio (primeiro banco): N√£o adiciona "UNION ALL"
Se @SQL j√° tem conte√∫do (demais bancos): Adiciona "UNION ALL" antes do SELECT

Resultado pr√°tico:
-- Banco 1: SELECT...
-- Banco 2: UNION ALL SELECT...
-- Banco 3: UNION ALL SELECT...

3. Constru√ß√£o do SELECT com JOIN
'SELECT ' +
    '''' + name + ''' AS DATABASE_NAME, ' +
    'c.TABLE_NAME, ' +
    't.TABLE_TYPE, ' +
    'c.COLUMN_NAME, ' +
    'c.DATA_TYPE, ' +
    'c.CHARACTER_MAXIMUM_LENGTH, ' +
    'c.NUMERIC_PRECISION, ' +
    'c.NUMERIC_SCALE, ' +
    'c.IS_NULLABLE, ' +
    'c.COLUMN_DEFAULT, ' +
    'c.ORDINAL_POSITION ' +
'FROM [' + name + '].INFORMATION_SCHEMA.COLUMNS c ' +
'INNER JOIN [' + name + '].INFORMATION_SCHEMA.TABLES t ON c.TABLE_NAME = t.TABLE_NAME ' +
Detalhamento:

'''' + name + ''' AS DATABASE_NAME:

Converte o nome do banco em string literal
Ex: Se name = 'DMD47', vira 'DMD47' AS DATABASE_NAME


FROM [' + name + '].INFORMATION_SCHEMA.COLUMNS c:

Refer√™ncia direta ao banco: FROM [DMD47].INFORMATION_SCHEMA.COLUMNS c
Alias c para facilitar refer√™ncias


INNER JOIN ... t ON c.TABLE_NAME = t.TABLE_NAME:

Liga as informa√ß√µes de colunas (c) com informa√ß√µes de tabelas (t)
Obt√©m o TABLE_TYPE (se √© tabela ou view)

4. Filtro de Busca Case-Insensitive
'WHERE UPPER(c.TABLE_NAME) LIKE UPPER(''%' + @ProcuraTabela + '%'')'
Como funciona:

UPPER(c.TABLE_NAME): Converte nome da tabela para mai√∫scula
UPPER(''%' + @ProcuraTabela + '%''): Converte o filtro para mai√∫scula
%ESTRUTURA%: Busca "ESTRUTURA" em qualquer parte do nome
Case-insensitive: Encontra "estrutura", "ESTRUTURA", "Estrutura", etc.

5. Filtro de Bancos
FROM sys.databases 
WHERE state = 0 
  AND database_id > 4 
  AND HAS_DBACCESS(name) = 1;
Cada condi√ß√£o:

state = 0: Apenas bancos online
database_id > 4: Exclui bancos de sistema
HAS_DBACCESS(name) = 1: Apenas bancos acess√≠veis

6. Adi√ß√£o da Ordena√ß√£o
IF @SQL <> ''
    SET @SQL = @SQL + ' ORDER BY DATABASE_NAME, TABLE_NAME, ORDINAL_POSITION;';
L√≥gica:

Verifica se construiu algum SQL
Adiciona ordena√ß√£o por: Banco ‚Üí Tabela ‚Üí Posi√ß√£o da Coluna
Uma √∫nica ordena√ß√£o para todo o resultado unificado

7. Execu√ß√£o Condicional
IF @SQL <> ''
    EXEC sp_executesql @SQL
ELSE
    PRINT 'Nenhum banco acess√≠vel encontrado.';
Tratamento:

Se h√° SQL: Executa a consulta
Se n√£o h√° bancos: Informa que nenhum banco foi encontrado

*/
